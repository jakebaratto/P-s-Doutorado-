// Script utilizado para desenvolvimento do Pós-Doutorado no Departamento de Geografia da USP
/// Projeto desenvolvido pela Dra. Jakeline Baratto e financiado pela FAPESP (processo: 2022/02383-3)
/// Script desenvolvido com base no curso da AmbGEO Python Para Análises Geoespaciais


// SCCI
var roi = ee.FeatureCollection ('projects/ee-jakelinebarattogeo/assets/SCCI_disso')

/// mangue

//var roi = ee.FeatureCollection('users/jakelinebarattogeo/mangueSSI_WGS84_disso')
Map.centerObject(roi,8)

// Período de dados 

var startdate = ee.Date.fromYMD(2003,1,1);
var enddate = ee.Date.fromYMD(2023,12,31);

var months = ee.List.sequence(10, 12)
var years = ee.List.sequence(2003, 2022)


/// DADOS MODIS PARA A REAMOSTRAGEM
var modis = ee.ImageCollection('MODIS/006/MYD13Q1');

// Filtrar as imagens das coleções para o período desejado
var modisFiltered = modis.filterDate(startdate, enddate);

// Selecionar a banda de interesse no MODIS NDVI (NDVI)
var modisNDVI = modisFiltered.select('NDVI');

// Definir a escala de reamostragem (250 metros)
var scale = 250;


// Função para reamostrar a imagem CHIRPS para a escala do MODIS NDVI
var resampleImage = function(img) {
  // Reamostrar a imagem CHIRPS para a escala do MODIS NDVI
  var resampled = img.resample('bicubic').reproject({
    crs: modisNDVI.first().projection(),
    scale: scale
  });
  // Retornar a imagem reamostrada
  return resampled;
};

/// Dados de precipitação utilizados 
var chirps = ee.ImageCollection('UCSB-CHG/CHIRPS/DAILY')
                  .filter(ee.Filter.date(startdate, enddate))
                  .filter(ee.Filter.calendarRange(10, 12,'month'))

print('1 - Numero de imagens',chirps.size().getInfo())


// Mapear a função de reamostragem para a coleção CHIRPS
var chirpsResampled =  chirps.map(resampleImage);



// ##Função para agregar dados de precipitação 

/// Dados mensais 
var createYearly =  ee.ImageCollection.fromImages(
    
    years.map(function (y) { //função ano
    return months.map(function(m) {//função mês aninhada em ano
    //Defina a variável precipitação 
      var createMonthlyImage = chirpsResampled.filter(ee.Filter.calendarRange(y, y, 'year'))//Filtro de ano
                    .filter(ee.Filter.calendarRange(m,m, 'month'))//Filtro de mês
                    .sum() //acumulando os dados
                    .clip(roi);//Recortando pela área de estudo
                    
      return createMonthlyImage.set('year', y)//Encerrando a função mês
              .set('month', m) //inserir Mês
              .set('system:time_start', ee.Date.fromYMD(y, m, 1));//Definindo Data Ano.Mês e Dia
    });
  }).flatten() //empilha a coleção ano a ano, mês a mês
              //Nivela coleções de coleções.
);

//// Empinhar os dados sazonais nos anos
var chirpssazonal = ee.ImageCollection.fromImages(//Retorna a coleção de imagens contendo as imagens fornecidas.
    years.map(function (year) {
    
    var anual = createYearly.filter(ee.Filter.calendarRange(year, year, 'year'))
        .sum() // acumula os dados anuais 
        .clip(roi); //recorte para área de estudo
    return anual
        .set('year', year)
        .set('system:time_start', ee.Date.fromYMD(year, 1, 1))//apenas para termos uma data
        ;
}));


print('1 - Quantas imagens', chirpssazonal.size())
  
/// DADOS MODIS PARA A REAMOSTRAGEM

var modis = ee.ImageCollection('MODIS/006/MYD13Q1');

// Filtrar as imagens das coleções para o período desejado
var modisFiltered = modis.filterDate(startdate, enddate);

// Selecionar a banda de interesse no MODIS NDVI (NDVI)
var modisNDVI = modisFiltered.select('NDVI');

// Definir a escala de reamostragem (250 metros)
var scale = 250;


/// Função para calcular a LST dia

function fatorLST (img){
  var mean = img.expression('(Td+Tn)/2',{
    'Td': img.select('LST_Day_1km'),
    'Tn': img.select('LST_Night_1km')}).rename('Ts')
  return   img.addBands(mean).multiply(0.02).subtract(273.15)
                                .clip(roi)
                              .copyProperties(img, img.propertyNames())
                             .set({date:img.date().format('yyyy-MM-dd')})

}
/// Dados LST modis 
var temperature= ee.ImageCollection("MODIS/061/MYD11A2").select(['LST_Night_1km',"LST_Day_1km"])
                                      .filterDate(startdate,enddate)
                                      .filterBounds(roi)
                                      .filter(ee.Filter.calendarRange(10, 12,'month'))
                                      .map(fatorLST)

var LST = temperature.select("Ts")


// Função para reamostrar MODIS 1km para a escala do MODIS NDVI (250m)
var resampleImage = function(img) {
  // Reamostrar a imagem CHIRPS para a escala do MODIS NDVI
  var resampled = img.resample('bicubic').reproject({
    crs: modisNDVI.first().projection(),
    scale: scale
  });
  // Retornar a imagem reamostrada
  return resampled;
};

// Mapear a função de reamostragem para a coleção MODIS LST
var LSTResampled = LST.map(resampleImage);

print(LSTResampled)


var temperature = LSTResampled.select('Ts')

/// Dados mensais de LST
var createYearly_Ts =  ee.ImageCollection.fromImages(
    
    years.map(function (y) { //função ano
    return months.map(function(m) {//função mês aninhada em ano
    //Defina a variável precipitação 
      var createMonthlyImage_temp = LSTResampled.filter(ee.Filter.calendarRange(y, y, 'year'))//Filtro de ano
                    .filter(ee.Filter.calendarRange(m, m, 'month'))//Filtro de mês
                    .mean()//acumulando os dados
                    .clip(roi);//Recortando pela área de estudo
                    
      return createMonthlyImage_temp.set('year', y)//Encerrando a função mês
              .set('month', m) //inserir Mês
              .set('system:time_start', ee.Date.fromYMD(y, m, 1));//Definindo Data Ano.Mês e Dia
                        
    });
  }).flatten() //empilha a coleção ano a ano, mês a mês
              //Nivela coleções de coleções.
);


var LST_sazonal = ee.ImageCollection.fromImages(//Retorna a coleção de imagens contendo as imagens fornecidas.
    years.map(function (year) {
    
    var anual = createYearly_Ts.filter(ee.Filter.calendarRange(year, year, 'year'))
        .mean() // acumula os dados anuais 
        .clip(roi); //recorte para área de estudo
    return anual
        .set('year', year)
        .set('system:time_start', ee.Date.fromYMD(year, 1, 1))//apenas para termos uma data
        ;
}));

// print('Quantas imagens temperatura', createYearly_LST.size())
  

////Dados NDVI MODIS 

//// Aplicar fator de escala 
function fator (img){
  return img.multiply(0.0001).copyProperties(img, img.propertyNames())
}

var IV = ee.ImageCollection("MODIS/061/MYD13Q1") 
              .select(["NDVI", "EVI"])
              .filterDate(startdate,enddate)
              .filter(ee.Filter.calendarRange(10, 12,'month'))
              .filterBounds(roi)
              .map(fator)


// Calcular o IVs mensais 

var IV_mensal_media =  ee.ImageCollection.fromImages( 
years.map(function (y) { //função ano
    return months.map(function(m) {//função mês aninhada em ano
    //Defina a variável DNVI 
      var IV_month = IV.filter(ee.Filter.calendarRange(y, y, 'year'))//Filtro de ano
                    .filter(ee.Filter.calendarRange(m, m, 'month'))//Filtro de mês
                    .mean() //acumulando os dados
                    .clip(roi);//Recortando pela área de estudo
                    
      return IV_month.set('year', y)//Encerrando a função mês
              .set('month', m) //inserir Mês
              .set('system:time_start', ee.Date.fromYMD(y, m, 1));//Definindo Data Ano.Mês e Dia
                        
    });
  }).flatten() //empilha a coleção ano a ano, mês a mês
              //Nivela coleções de coleções.
);             
              
var IVsazonal = ee.ImageCollection.fromImages(//Retorna a coleção de imagens contendo as imagens fornecidas.
    years.map(function (year) {
    
    var anual = IV_mensal_media .filter(ee.Filter.calendarRange(year, year, 'year'))
        .mean() // acumula os dados anuais 
        .clip(roi); //recorte para área de estudo
    return anual
        .set('year', year)
        .set('system:time_start', ee.Date.fromYMD(year, 1, 1))//apenas para termos uma data
        ;
}));

print(IVsazonal)   
         
// print('Quantas imagens NDVI', IV_mensal_media.size())


// ##Realizando o join

// ##Precisamos definir propriedades similares
// ## Neste caso, vamos focar nas datas que se sobrepõem

var innerJoin = ee.Join.inner();

// #Dicionário de filtros que serão utilizados
var filterTimeEq = ee.Filter.equals({
  'leftField': "system:time_start",
  'rightField': "system:time_start"
})

//// Juntas coleções
var innerJoinedclima = innerJoin.apply(IVsazonal,
                                  chirpssazonal, filterTimeEq);

var joined_collections= innerJoinedclima.map(function(feature) { 
  return ee.Image.cat(feature.get('primary'), feature.get('secondary'))})

// print(joined_collections)



// ##Junção das coleções
var innerJoinedclima_temp = innerJoin.apply(joined_collections,
                                        LST_sazonal, filterTimeEq);

var joined_collections_temp= innerJoinedclima_temp.map(function(feature) { 
  return ee.Image.cat(feature.get('primary'), feature.get('secondary'))})
  
/// transformar a coleção em bandas   
var colletion = ee.ImageCollection(joined_collections_temp);

print('3 - Juntando todas as coleções', colletion)

// print(joined_collections_temp.size())
// print(joined_collections_temp)

/// linearFit NDVU e precipitação 
var linearFit = colletion.select(['precipitation', 'NDVI'])
  .reduce(ee.Reducer.linearFit());

print(linearFit)

Map.addLayer(linearFit,
         {min: 0, max: [0.18, 20, -0.18], bands: ['scale', 'offset', 'scale']},
         'stable lights trend');

// // Inspect the results. PRECISO ENTENDER ISSO PARA FAZER A CORRELAÇÃO TEMPORAL 
// print('OLS estimates:', linearFit);
// print('y-intercept:', linearFit.get('offset'));
// print('Slope:', linearFit.get('scale'));

/// CORRELAÇÃO DO NDVI e precipitação 
var linear_corel =  colletion.select(['precipitation', 'NDVI'])
  .reduce(ee.Reducer.pearsonsCorrelation());

print(linear_corel,'peason')

// Inspect the results.
print('OLS:', linear_corel );
print('p-valor:', linear_corel.get('p-value'));
print('correlação:', linear_corel.get('correlation'));

Map.addLayer(linear_corel.select('correlation'),
        {min: -0.6, max: 0.9, palette: ['blue', 'white', 'green']}, 'correl PREC_NDVI');

/// Exportar a correlação P e NDVI
  Export.image.toDrive({
  image: linear_corel.select('correlation'),
  folder: 'PD_correl_sazonal',
  description: 'Correl_P_NDVI2004-2022_1-3',
  region: roi,
  scale: 250,
  maxPixels: 1e13
  })       
  
/// Exportar o p-valor P e NDVI
  Export.image.toDrive({
  image: linear_corel.select('p-value'),
  folder: 'PD_correl_sazonal',
  description: 'Pvalue_P_NDVI2004-2022_1-3',
  region: roi,
  scale: 250,
  maxPixels: 1e13
  })       
  

 // CORRELAÇÃO DO NDVI e Ts 
var linear_correlTNDVI =  colletion.select(['NDVI', 'Ts'])
  .reduce(ee.Reducer.pearsonsCorrelation());

print(linear_correlTNDVI,'peason Tmean_NDVI')

// // Inspect the results.
// print('OLS:', linear_corel );
// print('p-valor:', linear_corel.get('p-value'));
// print('correlação:', linear_corel.get('correlation'));

Map.addLayer(linear_correlTNDVI.select('correlation'),
        {min: -0.4, max: 0.9, palette: ['blue', 'white', 'green']}, 'correl Tmean_NDVI');


/// Exportar a correlação Ts e NDVI
Export.image.toDrive({
  image: linear_correlTNDVI.select('correlation'),
  folder: 'PD_correl_sazonal',
  description: 'Correl_Ts_NDVI2004-2022_10-12',
  region: roi,
  scale: 250,
  maxPixels: 1e13
  }) 

/// Exportar o p-valor Ts e NDVI
Export.image.toDrive({
  image: linear_correlTNDVI.select('p-value'),
  folder: 'PD_correl_sazonal',
  description: 'Pvalue_Ts_NDVI2004-2022_10-12',
  region: roi,
  scale: 250,
  maxPixels: 1e13
  }) 
  

/// CORRELAÇÃO DO EVI e precipitação 
var linear_corelevi =  colletion.select(['precipitation', 'EVI'])
  .reduce(ee.Reducer.pearsonsCorrelation());

/// Exportar a correl P e EVI 
 Export.image.toDrive({
  image: linear_corelevi.select('correlation'),
  folder: 'PD_correl_sazonal',
  description: 'Correl_P_EVI2004-2022_1-3',
  region: roi,
  scale: 250,
  maxPixels: 1e13
  })  
 
 /// Exportar o p-valor P e EVI
 Export.image.toDrive({
  image: linear_corelevi.select('p-value'),
  folder:   'PD_correl_sazonal',
  description: 'Pvalue_P_EVI2004-2022_1-3',
  region: roi,
  scale: 250,
  maxPixels: 1e13})  
  
// CORRELAÇÃO DO EVI e Ts 
var linear_correlTEVI =  colletion.select(['EVI', 'Ts'])
  .reduce(ee.Reducer.pearsonsCorrelation());
 
 
 /// Exportar o correlação  EVI  e Ts
 Export.image.toDrive({
  image: linear_correlTEVI.select('correlation'),
  folder: 'PD_correl_sazonal',
  description: 'Correl_Ts_EVI2004-2022_1-3',
  region: roi,
  scale: 250,
  maxPixels: 1e13
  })       
  
/// Exportar o p-valor  EVI  e LST
 Export.image.toDrive({
  image: linear_correlTEVI.select('p-value'),
  folder: 'PD_correl_sazonal',
  description: 'Pvalue_Ts_EVI2004-2022_1-3',
  region: roi,
  scale: 250,
  maxPixels: 1e13
  })       
    
